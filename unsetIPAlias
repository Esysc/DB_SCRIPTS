#!/bin/bash 


#
#
# unsetIPAlias v 1.1
# Unset prevoiusly set ip alias on CTRL network
#it must be run only on mgt-ai

log() {
local level=${1?}
shift
local code= line="[$(date '+%F %T')] $level: $*"
if [ -t 2 ]
then
case "$level" in
INFO) code=36 ;;
DEBUG) code=30 ;;
WARN) code=33 ;;
ERROR) code=31 ;;
*) code=37 ;;
esac
echo -e "\e[${code}m${line}\e[0m"
else
echo "$line"
fi >&2

REST='{"title":"unsetIPAlias ","content":"'$line'","userid":"'`whoami`'","date":"'`date`'"}'
(
perl - "$REST"  <<'_HERE_'
use integer;
use POSIX qw(strftime);
use Backticks;
use Data::Dumper;
use Sys::Hostname;
use Socket;
use LWP::UserAgent;
use LWP::Simple;
use strict;
use warnings;
use integer;
use Switch;
use JSON ;
use feature qw(switch);
use HTTP::Cookies;
use HTTP::Request;
use LWP;
use File::Path qw{mkpath};
my $uri = "http://x.x.x.204/SPOT/provisioning/api/events";
my $REST = shift;
my $lwp = LWP::UserAgent->new(
                        timeout               => 10,
);
my $req = HTTP::Request->new( 'POST', "$uri" );
$req->content($REST);
my $resp = $lwp->request($req);
print $req->as_string;
#print Dumper $resp;
_HERE_
)  2>&1 >/dev/null


}

# Usage function
usage () {
log INFO "usage $0
-eth [interface name ex. eth2]
-alias [alias number ex. 5]

"
exit 1
}

check_args() {
#put here the mandatory params
 intname=$(echo "$interface" )
 if [[ ! "$intname" == "eth2" ]]; then
 log ERROR "Only interface eth2 is allowed to be managed! You entered $interface" && exit 1
fi
}



if [ $# -ne 4 ]; then
usage
fi

while :
do
    case "$1" in
          -eth )
          interface="$2"
          shift 2
          ;;
	  -alias )
	  alias="$2"
	  shift 2
	;;
*)      break
;;
           esac
done
check_args
#all good detach the interface

ifconfig "$interface:$alias" down
if [ $? -eq 0 ]; then
log INFO "Successfully detached the interface $interface:$alias"
else
log ERROR "Error detaching $interface:$alias something was wrong."
fi
